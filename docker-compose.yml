version: "3.3"

services:
  traefik:
    image: "traefik:v2.2"
    restart: on-failure
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.secureweb.address=:443
      - --entrypoints.metrics.address=:8081
      - --providers.docker=true
      - --certificatesresolvers.le.acme.email=matteo.gassend@epitech.eu
      - --certificatesresolvers.le.acme.storage=/acme.json
      - --certificatesresolvers.le.acme.tlschallenge=true
      - --api.insecure
      - --metrics=true
      - --metrics.prometheus=true
      - --metrics.prometheus.buckets=0.100000, 0.300000, 1.200000, 5.000000
      - --metrics.prometheus.addEntryPointsLabels=true
      - --metrics.prometheus.addServicesLabels=true
      - --metrics.prometheus.entryPoint=metrics

      - --accesslog=true
      - --accesslog.filepath=/logs/access.log
      - --accesslog.format=json
    labels:
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.routers.redirs.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.redirs.entrypoints=web"
      - "traefik.http.routers.redirs.middlewares=redirect-to-https"
      - "traefik.http.routers.traefik.rule=Host(`dashboard.${DOMAIN:?err}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.tls.certresolver=le"
      - "traefik.http.routers.traefik.entrypoints=secureweb"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./data/traefik_logs:/logs"
      - "./acme.json:/acme.json"
  prometheus:
    image: prom/prometheus:v2.30.0
    user: root
    restart: unless-stopped
    volumes:
      - ./prometheus:/etc/prometheus:rw
      - ./data/prometheus:/prometheus:rw
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
    labels:
      - "traefik.http.routers.prometheus.rule=Host(`prometheus.${DOMAIN:?err}`)"
      - "traefik.http.routers.prometheus.service=prometheus"
      - "traefik.http.services.prometheus.loadbalancer.server.port=9090"
      - "traefik.http.routers.prometheus.tls.certresolver=le"
      - "traefik.http.routers.prometheus.entrypoints=secureweb"
  grafana:
    image: grafana/grafana
    restart: unless-stopped
    depends_on:
      - prometheus
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini
    env_file:
      - grafana.env
    user: root
    labels:
      - "traefik.http.routers.grafana.rule=Host(`grafana.${DOMAIN:?err}`)"
      - "traefik.http.routers.grafana.service=grafana"
      - "traefik.http.services.grafana.loadbalancer.server.port=3000"
      - "traefik.http.routers.grafana.tls.certresolver=le"
      - "traefik.http.routers.grafana.entrypoints=secureweb"
  server:
    build: ./server
    depends_on:
      - mongo
    ports:
      - "5000:3000"
    volumes:
      - ./data/server_logs:/logs
      - ./coverage:/app/coverage
    labels:
      - "traefik.http.routers.server-api.rule=Host(`api.${DOMAIN:?err}`)"
      - "traefik.http.services.server-api-svc.loadbalancer.server.port=3000"
      - "traefik.http.routers.server-api.tls.certresolver=le"
      - "traefik.http.routers.server-api.entrypoints=secureweb"
    environment:
      - MONGO=mongo:27017
      - BEAMS_SECRET=A916C41C8136459EFB3F95AE73F8168CF124786715C4D5FD09F67F3438A41FD5
      - BALENA_API_KEY=TnDNQstQf7hPgQa1pFTBCneWHUizC3Kj
  mongo:
    image: mongo
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - ./data/db:/data/db
volumes:
  grafana_data: {}
  mongoData: {}
